/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            #binding-cells = <0>;
            bindings = <&kp>,  <&kp>;
            display-name = "My Mod Tap";
        };
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;

        };
    };

    combos {
        compatible = "zmk,combos";
        timeout-ms = <50>;

        combo_less_than { // C + V = <
            key-positions = <27 28>;
            bindings = <&kp LT>;
            layers = <0>, <1>;
        };
        combo_greater_than { // M + COMMA = >
            key-positions = <31 32>;
            bindings = <&kp GT>;
            layers = <0>, <1>;
        };
        combo_left_bracket { // W + E = [
            key-positions = <2 3>;
            bindings = <&kp LBKT>;
            layers = <0>, <1>;
        };
        combo_right_bracket { // I + O = ]
            key-positions = <8 9>;
            bindings = <&kp RBKT>;
            layers = <0>, <1>;
        };
        combo_left_paren { // S + D = (
            key-positions = <14 15>;
            bindings = <&kp LPAR>;
            layers = <0>, <1>;
        };
        combo_right_paren { // K + L = )
            key-positions = <20 21>;
            bindings = <&kp RPAR>;
            layers = <0>, <1>;
        };
        combo_left_brace { // X + C = {
            key-positions = <26 27>;
            bindings = <&kp LBRC>;
            layers = <0>, <1>;
        };
        combo_right_brace { // COMMA + DOT = }
            key-positions = <32 33>;
            bindings = <&kp RBRC>;
            layers = <0>, <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        tapping-term-ms = <130>; // Global tapping term for hold-taps in this keymap

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R   |  T   |    |  Y  |  U   |  I  |  O  |  P  | \ |
            // | ESC  |  A  |  S  |  D  |  F   |  G   |    |  H  |  J   |  K  |  L  |  ;  |  '  |
            // | LGUI |  Z  |  X  |  C  |  V   |  B   |    |  N  |  M   |  ,  |  .  |  /  | LGUI  |
            //                    | LWR | SHFT | BSPC |    | ENT | SPC  | RSE |
            bindings = <
                &kp TAB  &kp Q       &kp W      &kp E      &kp R    &kp T         &kp Y      &kp U      &kp I      &kp O         &kp P          &kp BSLH
                &kp ESC  &kp A       &kp S      &kp D      &kp F    &kp G         &kp H      &kp J      &kp K      &kp L         &kp SEMI       &kp SQT
                &kp LGUI &mt LCTRL Z &mt LALT X &kp C      &kp V    &kp B         &kp N      &kp M      &kp COMMA  &mt RALT DOT  &mt RCTRL FSLH &kp LGUI
                                     &bspc_del  &kp LSHFT  &mo 1                  &mo 2      &kp SPACE  &kp RET
            >;
        };

        lower_layer { // Layer 1
            // -----------------------------------------------------------------------------------------
            // | TAB  |  !   |   :   |  #  |  ;   |   ?  |   |  @  |  7  |  8  |  9  |  %  |      |
            // | ESC  |  ^   |   =   |  _  |  $   |   * |   |  +  |  4  |  5  |  6  |  `  |      |
            // | LGUI |  <   |  "|"  |  -  |  >   |   /  |   |  &  |  1  |  2  |  3  |  ~  |      |
            //                       |       | SHFT | BSPC |   | ENT | SPC | FUN |
            bindings = <
                &kp TAB  &kp EXCL   &kp COLON  &kp HASH   &kp SEMI &kp QMARK     &kp AT     &kp N7     &kp N8     &kp N9   &kp PRCNT     &trans
                &kp ESC  &kp CARET  &kp EQUAL  &kp UNDER  &kp DLLR &kp ASTRK     &kp PLUS   &kp N4     &kp N5     &kp N6   &kp GRAVE     &kp DOUBLE_QUOTES 
                &kp LGUI &kp LT     &kp PIPE   &kp MINUS  &kp GT   &kp FSLH      &kp AMPS   &kp N1     &kp N2     &kp N3   &kp TILDE     &trans
                                    &bspc_del  &kp LSHFT  &trans                 &mo 3      &kp N0     &kp RET
            >;
        };

        raise_layer { // Layer 2
            // -----------------------------------------------------------------------------------------
            // |  TAB |       | MUTE | VOLDOWN | VOLUP |       |     | HOME | PGDN | PGUP |  END  |     |   |
            // |  ESC | PREV  | NEXT |  STOP   |  PLAY |       |     | LEFT | DOWN |  UP  | RIGHT |     |   |
            // | LGUI |       |      |         |       |       |     |      |      |      |       |     |   |
            //                       |         |  SHFT | BSPC  |     | ENT  |  SPC |       |
            bindings = <
                &kp TAB  &trans     &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END  &trans        &trans
                &kp ESC  &kp C_PREV &kp C_NEXT &kp C_STOP   &kp C_PP     &trans    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT &trans       &trans
                &kp LGUI &trans     &trans     &trans       &trans       &trans    &trans     &trans     &trans     &trans   &trans        &trans
                                    &trans     &kp LSHFT    &bspc_del              &kp RET    &kp SPACE  &trans
            >;
        };

        fun_layer { // Layer 3
            // -----------------------------------------------------------------------------------------
            // | TAB   |  LEFTCLICK | MOUSEUP   | RIGHTCLICK |       |       |      |      |   F7 |  F8  |  F9  |      |      |
            // | ESC   | MOUSELEFT  | MOUSEDOWN | MOUSERIGHT |       |       |      |  F12 |   F4 |  F5  |  F6  |  `   |      |
            // | BTCLR |        BT1 |       BT2 |        BT3 |   BT4 |   BT5 |      |  F11 |   F1 |  F2  |  F3  |  ~   |      |
            //                      |           |            |  SHFT |  BSPC |      |  ENT |  F10 |      |
            bindings = <
                &kp TAB    &mkp LCLK        &mmv MOVE_UP       &mkp RCLK        &trans         &trans        &trans     &kp F7     &kp F8     &kp F9   &trans        &trans
                &kp ESC    &mmv MOVE_LEFT   &mmv MOVE_DOWN     &mmv MOVE_RIGHT  &trans         &trans        &kp F12    &kp F4     &kp F5     &kp F6   &kp GRAVE     &trans
                &bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3   &bt BT_SEL 4  &kp F11    &kp F1     &kp F2     &kp F3   &kp TILDE     &trans
                                                               &trans           &kp LSHFT      &bspc_del     &kp RET    &kp F10    &trans
            >;
        };
    };
};
